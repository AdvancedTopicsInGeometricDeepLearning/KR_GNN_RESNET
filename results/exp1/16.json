{
    "train loss": 0.023550260812044144,
    "val loss": 1.9205018281936646,
    "test loss": 1.8246023654937744,
    "train accuracy": 0.9928571581840515,
    "val accuracy": 0.6380000114440918,
    "test accuracy": 0.6430000066757202,
    "train epochs": 20,
    "depth": 16,
    "model": "PytorchLightningModuleNodeClassifier(\n  (model): GNNNodeClassifier(\n    (model): Sequential(\n      (0): GNNEncoder(\n        (model): Sequential(\n          (0) - GCNConv(1433, 32): x, edge_index -> x\n          (1) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (2) - ELU(alpha=1.0, inplace=True): x -> x\n          (3) - GCNConv(32, 32): x, edge_index -> x\n          (4) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (5) - ELU(alpha=1.0, inplace=True): x -> x\n          (6) - GCNConv(32, 32): x, edge_index -> x\n          (7) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (8) - ELU(alpha=1.0, inplace=True): x -> x\n          (9) - GCNConv(32, 32): x, edge_index -> x\n          (10) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (11) - ELU(alpha=1.0, inplace=True): x -> x\n          (12) - GCNConv(32, 32): x, edge_index -> x\n          (13) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (14) - ELU(alpha=1.0, inplace=True): x -> x\n          (15) - GCNConv(32, 32): x, edge_index -> x\n          (16) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (17) - ELU(alpha=1.0, inplace=True): x -> x\n          (18) - GCNConv(32, 32): x, edge_index -> x\n          (19) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (20) - ELU(alpha=1.0, inplace=True): x -> x\n          (21) - GCNConv(32, 32): x, edge_index -> x\n          (22) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (23) - ELU(alpha=1.0, inplace=True): x -> x\n          (24) - GCNConv(32, 32): x, edge_index -> x\n          (25) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (26) - ELU(alpha=1.0, inplace=True): x -> x\n          (27) - GCNConv(32, 32): x, edge_index -> x\n          (28) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (29) - ELU(alpha=1.0, inplace=True): x -> x\n          (30) - GCNConv(32, 32): x, edge_index -> x\n          (31) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (32) - ELU(alpha=1.0, inplace=True): x -> x\n          (33) - GCNConv(32, 32): x, edge_index -> x\n          (34) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (35) - ELU(alpha=1.0, inplace=True): x -> x\n          (36) - GCNConv(32, 32): x, edge_index -> x\n          (37) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (38) - ELU(alpha=1.0, inplace=True): x -> x\n          (39) - GCNConv(32, 32): x, edge_index -> x\n          (40) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (41) - ELU(alpha=1.0, inplace=True): x -> x\n          (42) - GCNConv(32, 32): x, edge_index -> x\n          (43) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (44) - ELU(alpha=1.0, inplace=True): x -> x\n          (45) - GCNConv(32, 32): x, edge_index -> x\n          (46) - BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True): x -> x\n          (47) - ELU(alpha=1.0, inplace=True): x -> x\n        )\n      )\n      (1): Linear(in_features=32, out_features=32, bias=True)\n      (2): ELU(alpha=1.0)\n      (3): Linear(in_features=32, out_features=7, bias=True)\n      (4): LogSoftmax(dim=1)\n      (5): Saver()\n    )\n  )\n)"
}